<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>老羊头的小破站</title>
  
  <subtitle>佛系青年，与世无争，本本分分，唯独一个“帅”字贯穿全生！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-05-27T15:30:26.880Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>杨昳</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C语言的生命周期和作用域</title>
    <link href="http://yoursite.com/2019/05/03/C%E8%AF%AD%E8%A8%80%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <id>http://yoursite.com/2019/05/03/C语言的生命周期和作用域/</id>
    <published>2019-05-03T14:56:33.000Z</published>
    <updated>2019-05-27T15:30:26.880Z</updated>
    
    <content type="html"><![CDATA[<h2 id="C语言生命周期和作用域的定义"><a href="#C语言生命周期和作用域的定义" class="headerlink" title="C语言生命周期和作用域的定义"></a>C语言生命周期和作用域的定义</h2><p>生命周期：是一个变量存在的周期。</p><p>作用域：是一个变量可以被引用的范围。最常见的如：{}、static修饰符等等。</p><h3 id="（1）全局变量："><a href="#（1）全局变量：" class="headerlink" title="（1）全局变量："></a>（1）全局变量：</h3><p>作用域：全局作用域（只需要在一个源文件中定义，就可以作用于所有的源文件）；</p><p>生命周期：程序运行期一直存在；</p><p>引用方法：其他文件如果要使用，必须用extern 关键字声明要引用的全局变量；</p><p>内存分布：全局（静态存储区）。</p><p>注意：如果再两个文件中都定义了相同名字的全局变量，则连接错误：变量重定义。</p><h3 id="（2）全局静态变量："><a href="#（2）全局静态变量：" class="headerlink" title="（2）全局静态变量："></a>（2）全局静态变量：</h3><p>生命周期：程序运行期一直存在；</p><p>作用域：文件作用域（只在被定义的文件中可见：static的一个作用就是隐藏）</p><p>内存分布：全局（静态存储区）。</p><p>定义方法：static关键字，const关键字（注意C/C++意义不同）</p><p>注意：只要文件不相互包含，两个不同的文件中是可以定义完全相同的两个全局静态变量的。</p><h3 id="（3）静态局部变量："><a href="#（3）静态局部变量：" class="headerlink" title="（3）静态局部变量："></a>（3）静态局部变量：</h3><p>生命周期：程序运行期一直存在；（超过其作用域便无法被引用）</p><p>作用域：局部作用域（只在局部作用于可见）</p><p>内存分布：全局（静态存储区）。</p><p>定义方法：局部作用域中用static定义。</p><p>注意：只被初始化一次，多线程中需要加锁保护。</p><h3 id="（4）局部变量："><a href="#（4）局部变量：" class="headerlink" title="（4）局部变量："></a>（4）局部变量：</h3><p>生命周期：程序运行处局部作用域 即被销毁。</p><p>作用域：局部作用域（只在局部作用于可见）</p><p>内存分布：栈区</p><p>定义方法：在局部作用域中用auto指示符定义，可省略auto</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> c =  <span class="number">1</span>;<span class="comment">//全局初始化去（静态全局变量）</span></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>; <span class="comment">//全局初始化区(全局变量)</span></span><br><span class="line"><span class="keyword">char</span>  *p1; <span class="comment">//全局未初始化区（全局变量）</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> <span class="keyword">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b;<span class="comment">//存放于栈区（局部变量）</span></span><br><span class="line">    <span class="keyword">char</span> s[] = <span class="string">"abc"</span>;<span class="comment">//s存放于栈区（局部变量）</span></span><br><span class="line">    <span class="keyword">char</span> *p2 ;<span class="comment">//栈（局部变量）</span></span><br><span class="line">    <span class="keyword">char</span> *p3 = <span class="string">"123456"</span>;<span class="comment">//p3存放于栈区(局部变量);“123456”存放区文字常量区</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> c = <span class="number">0</span>;<span class="comment">// c存放于全局初始化区（静态局部变量）</span></span><br><span class="line">    p1 = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">10</span>);</span><br><span class="line">    p2 = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="number">20</span>);<span class="comment">//分配得来的10和20字节的区域在堆区；</span></span><br><span class="line">                            <span class="comment">//变量p1、p2指向堆区分配的内存</span></span><br><span class="line"> </span><br><span class="line">    <span class="built_in">strcpy</span>(p1, <span class="string">"123456"</span>);<span class="comment">//“123456”存放区文字常量区</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;C语言生命周期和作用域的定义&quot;&gt;&lt;a href=&quot;#C语言生命周期和作用域的定义&quot; class=&quot;headerlink&quot; title=&quot;C语言生命周期和作用域的定义&quot;&gt;&lt;/a&gt;C语言生命周期和作用域的定义&lt;/h2&gt;&lt;p&gt;生命周期：是一个变量存在的周期。&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="C/C++" scheme="http://yoursite.com/categories/C-C/"/>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>CAN基础知识介绍</title>
    <link href="http://yoursite.com/2019/05/03/CAN%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/05/03/CAN学习笔记/</id>
    <published>2019-05-03T14:56:33.000Z</published>
    <updated>2019-05-03T16:05:08.478Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CAN通信"><a href="#CAN通信" class="headerlink" title="CAN通信"></a>CAN通信</h1><p>CAN是控制器局域网络(Controller Area Network, CAN)的简称，已成为汽车计算机控制系统和嵌入式工业控制局域网的标准总线。</p><p>笔者由于团队需要，对CAN通信进行学习，并记此笔记，怕忘。。。</p><h3 id="一、CAN协议的特点"><a href="#一、CAN协议的特点" class="headerlink" title="一、CAN协议的特点"></a>一、CAN协议的特点</h3><p>1.多主控制</p><p>2.系统柔软性</p><p>3.速度快，距离远</p><p>4.具有错误检测，错误通知和错误恢复功能</p><p>5.故障封闭功能</p><p>6.连接节点多</p><h3 id="二、物理层特征"><a href="#二、物理层特征" class="headerlink" title="二、物理层特征"></a>二、物理层特征</h3><p>显性电平对应逻辑：0（CAN_H和CAN_L之差为2V左右）</p><p>隐性电平对应逻辑：1（CAN_H和CAN_L之差为0V）</p><p>【在CAN总线的起止端都有一个120欧姆的中断电阻，来做阻抗匹配，以减少回波辐射】</p><p><img src="/2019/05/03/CAN学习笔记/图片1.png" alt="逻辑电平"></p><h3 id="三、数据帧（7个段）"><a href="#三、数据帧（7个段）" class="headerlink" title="三、数据帧（7个段）"></a>三、数据帧（7个段）</h3><p><img src="/2019/05/03/CAN学习笔记/图片2.png" alt="数据帧"></p><p>1.帧起始：表示数据帧开始的段</p><p>2.仲裁段：表示该帧优先级的段</p><p><img src="/2019/05/03/CAN学习笔记/图片3.png" alt="仲裁段"></p><p>3.控制段：表示数据的字节数及保留位的段</p><p><img src="/2019/05/03/CAN学习笔记/图片4.png" alt="控制段"></p><p>4.数据段：数据的内容，一帧可发送0~8个字节的数据</p><p><img src="/2019/05/03/CAN学习笔记/图片5.png" alt="数据段"></p><p>5.CRC段：检查帧的传输错误的段</p><p><img src="/2019/05/03/CAN学习笔记/图片6.png" alt="CRC段"></p><p>6.ACK段：表示确认正常接收的段</p><p><img src="/2019/05/03/CAN学习笔记/图片7.png" alt="ACK段"></p><p>7.帧结束：表示数据帧结束的段</p><p><img src="/2019/05/03/CAN学习笔记/图片8.png" alt="帧结束"></p><p>（ ID：11位，高位在前，低位在后，基本ID禁止高7位都为隐性，即不能：ID=1111111xxxx ）</p><h3 id="四、总线仲裁"><a href="#四、总线仲裁" class="headerlink" title="四、总线仲裁"></a>四、总线仲裁</h3><p>1.总线空闲时，最先发送的单元获得发送优先权，一旦发送，其他单元无法抢占</p><p>2.如果有多个单元同时发送，则连续输出显性电平多的单元，具有较高优先级</p><h3 id="五、位时序"><a href="#五、位时序" class="headerlink" title="五、位时序"></a>五、位时序</h3><p>可根据位时序设置波特率</p><p><img src="/2019/05/03/CAN学习笔记/图片9.png" alt="位时序"></p><h4 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h4><p>一直觉得通信啥的很玄学，其实还是没能熟练掌握最基本的规则。说玄也玄，但万物有因，了解好通信的基础知识，以后出现问题，才好追根溯源，然后好好解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CAN通信&quot;&gt;&lt;a href=&quot;#CAN通信&quot; class=&quot;headerlink&quot; title=&quot;CAN通信&quot;&gt;&lt;/a&gt;CAN通信&lt;/h1&gt;&lt;p&gt;CAN是控制器局域网络(Controller Area Network, CAN)的简称，已成为汽车计算机控制系统和
      
    
    </summary>
    
      <category term="32单片机" scheme="http://yoursite.com/categories/32%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://yoursite.com/2019/05/03/test/"/>
    <id>http://yoursite.com/2019/05/03/test/</id>
    <published>2019-05-03T12:18:45.000Z</published>
    <updated>2019-05-03T16:13:36.884Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/05/03/test/timg1.jpg" alt="你想输入的替代文字"></p><h3 id="Hello-world！"><a href="#Hello-world！" class="headerlink" title="Hello world！"></a>Hello world！</h3><p>第一篇博客佛系的向世界问好</p><p>老羊头以后会好好经营自己的小破站</p><p>Hello world！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/2019/05/03/test/timg1.jpg&quot; alt=&quot;你想输入的替代文字&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;Hello-world！&quot;&gt;&lt;a href=&quot;#Hello-world！&quot; class=&quot;headerlink&quot; title=&quot;Hello 
      
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
